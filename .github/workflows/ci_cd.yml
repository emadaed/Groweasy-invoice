name: CI/CD Pipeline to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      APP_NAME: ${{ secrets.APP_NAME }}
      EB_ENV_NAME: ${{ secrets.EB_ENV_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build and Package
        run: |
          mkdir -p dist
          ZIP_NAME="${APP_NAME}-build-$(date +'%Y%m%d%H%M%S').zip"
          ARTIFACT_PATH="dist/$ZIP_NAME"
          ARTIFACT_KEY="$ZIP_NAME"
          echo "Building artifact: $ARTIFACT_KEY"
          zip -r "$ARTIFACT_PATH" . -x "*.git*" "dist/*"
          echo "Uploading to S3..."
          aws s3 cp "$ARTIFACT_PATH" "s3://$S3_BUCKET/$ARTIFACT_KEY"
          echo "ARTIFACT_KEY=$ARTIFACT_KEY" >> $GITHUB_ENV

      - name: Diagnostic Preflight (Visibility Test)
        run: |
          echo "Verifying artifact presence before EB upload..."
          echo "Using key: $ARTIFACT_KEY"
          aws sts get-caller-identity
          aws s3 ls s3://$S3_BUCKET/ | grep "$ARTIFACT_KEY" || echo "⚠️ Artifact not listed!"
          aws s3api head-object --bucket $S3_BUCKET --key "$ARTIFACT_KEY" || echo "⚠️ HeadObject failed!"

      - name: Create new EB application version
        run: |
          VERSION_LABEL="v$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
          echo "Creating EB Application Version: $VERSION_LABEL"
          aws elasticbeanstalk create-application-version \
            --application-name "$APP_NAME" \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="$S3_BUCKET",S3Key="$ARTIFACT_KEY"

      - name: Deploy new version to environment
        run: |
          VERSION_LABEL=$(aws elasticbeanstalk describe-application-versions \
            --application-name "$APP_NAME" \
            --query "ApplicationVersions[-1].VersionLabel" \
            --output text)
          echo "Deploying version $VERSION_LABEL to $EB_ENV_NAME..."
          aws elasticbeanstalk update-environment \
            --environment-name "$EB_ENV_NAME" \
            --version-label "$VERSION_LABEL"

      - name: Validate environment health
        run: |
          echo "Validating EB health status..."
          aws elasticbeanstalk wait environment-updated --environment-names "$EB_ENV_NAME"
          aws elasticbeanstalk describe-environments \
            --environment-names "$EB_ENV_NAME" \
            --query "Environments[0].Status"
