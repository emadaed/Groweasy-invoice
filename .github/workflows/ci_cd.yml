name: CI/CD — Build, Package & Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ "main", "master" ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-2' }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  APP_NAME: ${{ secrets.APP_NAME || 'groweasy-invoice-app' }}
  EB_ENV_NAME: ${{ secrets.EB_ENV_NAME || 'Groweasy-invoice-app-env' }}

jobs:
  build-package-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build & package artifact
        env:
          S3_BUCKET: ${{ env.S3_BUCKET }}
          AWS_REGION: ${{ env.AWS_REGION }}
          APP_NAME: ${{ env.APP_NAME }}
        run: |
          chmod +x scripts/build_and_package.sh
          ./scripts/build_and_package.sh

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create EB application version
        id: create_app_version
        env:
          S3_BUCKET: ${{ env.S3_BUCKET }}
          AWS_REGION: ${{ env.AWS_REGION }}
          APP_NAME: ${{ env.APP_NAME }}
          EB_ENV_NAME: ${{ env.EB_ENV_NAME }}
        run: |
          ARTIFACT_KEY=$(cat dist/artifact_key.txt)
          VERSION_LABEL="v${{ github.run_number }}-${GITHUB_SHA::8}"
          echo "Using artifact: $ARTIFACT_KEY"
          aws elasticbeanstalk create-application-version                 --application-name "$APP_NAME"                 --version-label "$VERSION_LABEL"                 --source-bundle S3Bucket="$S3_BUCKET",S3Key="$ARTIFACT_KEY"                 --region $AWS_REGION
          echo "::set-output name=version::$VERSION_LABEL"

      - name: Update Elastic Beanstalk environment
        id: update_env
        env:
          APP_NAME: ${{ env.APP_NAME }}
          EB_ENV_NAME: ${{ env.EB_ENV_NAME }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          VERSION_LABEL="${{ steps.create_app_version.outputs.version }}"
          echo "Updating EB environment $EB_ENV_NAME -> version $VERSION_LABEL"
          aws elasticbeanstalk update-environment                 --environment-name "$EB_ENV_NAME"                 --version-label "$VERSION_LABEL"                 --region $AWS_REGION

      - name: Wait & validate deployment
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          EB_ENV_NAME: ${{ env.EB_ENV_NAME }}
        run: |
          chmod +x scripts/eb_wait_and_validate.sh
          ./scripts/eb_wait_and_validate.sh

      - name: Notify Slack (optional)
        if: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_RUN_URL: ${{ github.run_url }}
        run: |
          payload=$(jq -n --arg txt "GrowEasy: Deployment finished for ${{ github.ref }} — version ${{ steps.create_app_version.outputs.version }}. See run: $GITHUB_RUN_URL" '{text:$txt}')
          curl -s -X POST -H 'Content-type: application/json' --data "$payload" "${{ secrets.SLACK_WEBHOOK_URL }}"
